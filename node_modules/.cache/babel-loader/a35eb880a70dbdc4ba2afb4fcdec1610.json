{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nconst Map = props => {\n  _s();\n\n  const [statesData, setStatesData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      // const res = await fetch('https://willhaley.com/assets/united-states-map-react/states.json');\n      const res = await fetch('./us.json'); // const res1 = await fetch('./colorTest.json')\n\n      const statesData = await res.json(); // const statesData1 = await res1.json();\n      // Set the statesData with the data received from fetch().\n\n      setStatesData(statesData);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap\",\n    children: statesData.map((stateData, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"state\",\n      id: stateData.id // style={{cursor: \"pointer\"}}\n      ,\n      // stroke=\"#fff\"\n      strokeWidth: \"0.5px\",\n      d: stateData.shape // onMouseOver={(event) => {\n      //   event.target.style.fill = 'red';\n      // }}\n      // onMouseOut={(event) => {\n      //   event.target.style.fill = 'orange';\n      // }}\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Map, \"reEC43PI7doWY+URVWfGlTOQ7jk=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js"],"names":["React","useState","useEffect","geoEqualEarth","geoPath","feature","projection","scale","translate","Map","props","statesData","setStatesData","res","fetch","json","map","stateData","index","id","shape"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,QAAvC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAU,GAAGH,aAAa,GAC7BI,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAIA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX;AACA,YAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB,CAFW,CAGX;;AACA,YAAMH,UAAU,GAAG,MAAME,GAAG,CAACE,IAAJ,EAAzB,CAJW,CAKX;AACA;;AACAH,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACG;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,OAArC;AAAA,cACEA,UAAU,CAACK,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,EAAE,EAAED,SAAS,CAACE,EAFhB,CAGE;AAHF;AAKE;AACA,MAAA,WAAW,EAAC,OANd;AAOE,MAAA,CAAC,EAAEF,SAAS,CAACG,KAPf,CAQE;AACA;AACA;AACA;AACA;AACA;;AAbF,OAIOF,KAJP;AAAA;AAAA;AAAA;AAAA,YADD;AADF;AAAA;AAAA;AAAA;AAAA,UADH;AAsBD,CArCD;;GAAMT,G;;KAAAA,G;AAuCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { feature } from \"topojson-client\"\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([ 800 / 2, 450 / 2 ])\n\nconst Map = (props) => {\n  const [statesData, setStatesData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      // const res = await fetch('https://willhaley.com/assets/united-states-map-react/states.json');\n      const res = await fetch('./us.json')\n      // const res1 = await fetch('./colorTest.json')\n      const statesData = await res.json();\n      // const statesData1 = await res1.json();\n      // Set the statesData with the data received from fetch().\n      setStatesData(statesData);\n    })();\n  }, []);\n\n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"usMap\">\n      {statesData.map((stateData, index) =>\n        <path\n          className=\"state\"\n          id={stateData.id}\n          // style={{cursor: \"pointer\"}}\n          key={index}\n          // stroke=\"#fff\"\n          strokeWidth=\"0.5px\"\n          d={stateData.shape}\n          // onMouseOver={(event) => {\n          //   event.target.style.fill = 'red';\n          // }}\n          // onMouseOut={(event) => {\n          //   event.target.style.fill = 'orange';\n          // }}\n        >\n        </path>\n      )}\n    </svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}