{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoAlbersUsa() // .scale(960)\n.translate([960 / 2, 600 / 2]);\n\nfunction Map(data) {\n  _s();\n\n  const [statesData, setStatesData] = useState([]);\n  const [eventsData, setEventsData] = useState([]); // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      const res1 = await fetch('./mass_shooting_events_stanford_msa_release.geojson');\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n    })();\n  }, []);\n  const ref = useD3(svg => {\n    var path = path().projection(projection); // svg\n    //   .selectAll(\"path\")\n    //   .data(statesData)\n    //   .enter()\n    //   .append(\"path\")\n    //   .attr(\"class\", \"state\")\n    //   .attr(\"id\", function(d){return d.id})\n    //   .attr(\"d\", function(d){return d.shape})\n    //   .style(\n    //   \"opacity\", \n    //   function(d){\n    //     for (let i = 0; i < data.data1.length ; i++){\n    //       if (data.data1[i].id == d.id) {\n    //         // console.log(data1.data1[i].num)\n    //         return data.data1[i].num + 0.05\n    //       }\n    //     } \n    //   })\n    //   .style(\n    //   \"fill\", \n    //   function(d){\n    //     for (let i = 0; i < data.data2.length ; i++){\n    //       if (data.data2[i].id == d.id) {\n    //         // console.log(data2.data2[i].num)\n    //         if (data.data2[i].num>=0.5){\n    //           return \"#9865ff\"\n    //           // return \"#171edc\"\n    //         }else{\n    //           return \"#f9ff66\"\n    //           // return \"#f8e426\"\n    //         }\n    //       }\n    //     } \n    //   })\n\n    console.log(statesData);\n    svg.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"d\", path).style(\"fill\", \"steelblue\"); // svg\n    //   .selectAll(\".points\")\n    //   .data(eventsData).enter()\n    //   .append(\"circle\")\n    //   .attr(\"r\", \n    //       function (d) { \n    //           return 3\n    //       })\n    //   .style(\n    //       \"fill\",\"red\"\n    //   )\n    //   .attr(\"transform\", \n    //       function(d) { \n    //           console.log(d)\n    //           return \"translate(\" + projection(d.geometry.coordinates) + \")\" \n    //       })\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"srNtbUROrifMzB9nUZ33w+aDRUY=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","projection","translate","Map","data","statesData","setStatesData","eventsData","setEventsData","res","fetch","statesDataCombine","json","features","res1","eventsDataCombine","ref","svg","path","console","log","selectAll","enter","append","attr","style","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA4BC,YAA5B,QAAgD,QAAhD;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAGJ,YAAY,GAC7B;AAD6B,CAE5BK,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAKA,SAASC,GAAT,CAAaC,IAAb,EAAmB;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C,CAFiB,CAGjB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMe,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,YAAMC,iBAAiB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAhC;AACA,YAAMP,UAAU,GAAGM,iBAAiB,CAACE,QAArC;AACAP,MAAAA,aAAa,CAACD,UAAD,CAAb;AACA,YAAMS,IAAI,GAAG,MAAMJ,KAAK,CAAC,qDAAD,CAAxB;AACA,YAAMK,iBAAiB,GAAG,MAAMD,IAAI,CAACF,IAAL,EAAhC;AACA,YAAML,UAAU,GAAGQ,iBAAiB,CAACF,QAArC;AACAL,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMS,GAAG,GAAGlB,KAAK,CACdmB,GAAD,IAAS;AACP,QAAIC,IAAI,GAAGA,IAAI,GACZjB,UADQ,CACGA,UADH,CAAX,CADO,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACAY,IAAAA,GAAG,CAACI,SAAJ,CAAc,MAAd,EACGjB,IADH,CACQC,UADR,EAEGiB,KAFH,GAGGC,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,GAJR,EAIaN,IAJb,EAKGO,KALH,CAKS,MALT,EAKiB,WALjB,EAvCO,CA8CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEC,GAjEY,EAiEX,CAACpB,UAAU,CAACqB,MAAZ,CAjEW,CAAjB;AAoEA,sBACG;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,OAArC;AAA6C,IAAA,GAAG,EAAEV;AAAlD;AAAA;AAAA;AAAA;AAAA,UADH;AAGD;;GAzFQb,G;UAkBKL,K;;;KAlBLK,G;AA2FT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath,geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\nconst projection = geoAlbersUsa()\n  // .scale(960)\n  .translate([ 960 / 2, 600 / 2 ])\n\n\nfunction Map(data) {\n  const [statesData, setStatesData] = useState([]);\n  const [eventsData, setEventsData] = useState([]);\n  // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      const res1 = await fetch('./mass_shooting_events_stanford_msa_release.geojson')\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features\n      setEventsData(eventsData);\n    })();\n  }, []);\n\n  const ref = useD3(\n    (svg) => {\n      var path = path()\n\t\t\t\t\t\t\t .projection(projection);\n\n      // svg\n      //   .selectAll(\"path\")\n      //   .data(statesData)\n      //   .enter()\n      //   .append(\"path\")\n      //   .attr(\"class\", \"state\")\n      //   .attr(\"id\", function(d){return d.id})\n      //   .attr(\"d\", function(d){return d.shape})\n      //   .style(\n      //   \"opacity\", \n      //   function(d){\n      //     for (let i = 0; i < data.data1.length ; i++){\n      //       if (data.data1[i].id == d.id) {\n      //         // console.log(data1.data1[i].num)\n      //         return data.data1[i].num + 0.05\n      //       }\n      //     } \n      //   })\n      //   .style(\n      //   \"fill\", \n      //   function(d){\n      //     for (let i = 0; i < data.data2.length ; i++){\n      //       if (data.data2[i].id == d.id) {\n      //         // console.log(data2.data2[i].num)\n      //         if (data.data2[i].num>=0.5){\n      //           return \"#9865ff\"\n      //           // return \"#171edc\"\n      //         }else{\n      //           return \"#f9ff66\"\n      //           // return \"#f8e426\"\n      //         }\n      //       }\n      //     } \n      //   })\n      console.log(statesData)\n      svg.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path)\n        .style(\"fill\", \"steelblue\");\n\n      // svg\n      //   .selectAll(\".points\")\n      //   .data(eventsData).enter()\n      //   .append(\"circle\")\n      //   .attr(\"r\", \n      //       function (d) { \n      //           return 3\n      //       })\n      //   .style(\n      //       \"fill\",\"red\"\n      //   )\n      //   .attr(\"transform\", \n      //       function(d) { \n      //           console.log(d)\n      //           return \"translate(\" + projection(d.geometry.coordinates) + \")\" \n\n      //       })\n      \n      },[statesData.length]\n  )\n  \n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"usMap\" ref={ref}></svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}