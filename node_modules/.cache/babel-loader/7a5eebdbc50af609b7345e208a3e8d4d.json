{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props) {\n  _s();\n\n  const [statesData, setStatesData] = useState([]); // const [eventsData, setEventsData] = useState([]);\n  // const [scaleData, setScaleData] = useState(data.scaleSend);\n  // const [scaleData, setScaleData] = React.useState(1000);\n  // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData); // const res1 = await fetch('./mass_shooting_events_stanford_msa_release.geojson')\n      // const eventsDataCombine = await res1.json();\n      // const eventsData = eventsDataCombine.features;\n      // setEventsData(eventsData);\n      // setScaleData(data.scaleSend);\n      // const scaleData=data.scaleSend\n      // setScaleData(scaleData)\n    })();\n  }, []); // console.log(data)\n\n  const projection = geoAlbersUsa().scale(props.scaleSend).translate([960 / 2, 600 / 2]);\n  const ref = useD3(svg => {\n    var path = d3.geoPath().projection(projection);\n    var myColor = d3.scaleLinear().domain([0.0, 1.0]).range([\"white\", \"red\"]);\n    svg.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n      // console.log(d)\n      return d.properties.NAME;\n    }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n    .style(\"opacity\", function (d) {\n      for (let i = 0; i < props.data1.length; i++) {\n        if (props.data1[i].name == d.properties.NAME) {\n          // console.log(data1.data1[i].num)\n          return props.data1[i].num + 0.05;\n        }\n      }\n    }).style(\"fill\", function (d) {\n      for (let i = 0; i < props.data2.length; i++) {\n        if (props.data2[i].name == d.properties.NAME) {\n          return myColor(d);\n        }\n      }\n    }); // svg\n    //   .selectAll(\"path\")\n    //   .data(statesData)\n    //   .enter()\n    //   .append(\"path\")\n    //   .attr(\"class\", \"state\")\n    //   .attr(\"id\", function(d){return d.id})\n    //   .attr(\"d\", function(d){return d.shape})\n    //   .style(\n    //   \"opacity\", \n    //   function(d){\n    //     for (let i = 0; i < data.data1.length ; i++){\n    //       if (data.data1[i].id == d.id) {\n    //         // console.log(data1.data1[i].num)\n    //         return data.data1[i].num + 0.05\n    //       }\n    //     } \n    //   })\n    //   .style(\n    //   \"fill\", \n    //   function(d){\n    //     for (let i = 0; i < data.data2.length ; i++){\n    //       if (data.data2[i].id == d.id) {\n    //         // console.log(data2.data2[i].num)\n    //         if (data.data2[i].num>=0.5){\n    //           return \"#9865ff\"\n    //           // return \"#171edc\"\n    //         }else{\n    //           return \"#f9ff66\"\n    //           // return \"#f8e426\"\n    //         }\n    //       }\n    //     } \n    //   })\n    // console.log(statesData[0])\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"HGQlez1OJrZ5SCqg76S2m6X37jw=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","Map","props","statesData","setStatesData","res","fetch","statesDataCombine","json","features","projection","scale","scaleSend","translate","ref","svg","path","myColor","scaleLinear","domain","range","selectAll","data","enter","append","attr","d","properties","NAME","style","i","data1","length","name","num","data2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath,geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const [statesData, setStatesData] = useState([]);\n  // const [eventsData, setEventsData] = useState([]);\n\n  // const [scaleData, setScaleData] = useState(data.scaleSend);\n  // const [scaleData, setScaleData] = React.useState(1000);\n  \n  // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      // const res1 = await fetch('./mass_shooting_events_stanford_msa_release.geojson')\n      // const eventsDataCombine = await res1.json();\n      // const eventsData = eventsDataCombine.features;\n      // setEventsData(eventsData);\n\n      // setScaleData(data.scaleSend);\n      // const scaleData=data.scaleSend\n      // setScaleData(scaleData)\n    })();\n  }, []);\n\n  // console.log(data)\n\n  const projection = geoAlbersUsa()\n  .scale(props.scaleSend)\n  .translate([ 960 / 2, 600 / 2 ])\n\n\n\n  const ref = useD3(\n    (svg) => {\n      var path = d3.geoPath()\n\t\t\t\t\t\t\t .projection(projection);\n\n      var myColor = d3.scaleLinear().domain([0.0,1.0]).range([\"white\", \"red\"])\n\n      svg.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function(d){\n          // console.log(d)\n        return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        .style(\n            \"opacity\", \n            function(d){\n              for (let i = 0; i < props.data1.length ; i++){\n                if (props.data1[i].name == d.properties.NAME) {\n                  // console.log(data1.data1[i].num)\n                  return props.data1[i].num + 0.05\n                }\n              } \n            })\n        .style(\n            \"fill\", \n            function(d){\n              for (let i = 0; i < props.data2.length ; i++){\n                if (props.data2[i].name == d.properties.NAME) {\n\n                  return myColor(d)\n                }\n              } \n            })\n\n      // svg\n      //   .selectAll(\"path\")\n      //   .data(statesData)\n      //   .enter()\n      //   .append(\"path\")\n      //   .attr(\"class\", \"state\")\n      //   .attr(\"id\", function(d){return d.id})\n      //   .attr(\"d\", function(d){return d.shape})\n      //   .style(\n      //   \"opacity\", \n      //   function(d){\n      //     for (let i = 0; i < data.data1.length ; i++){\n      //       if (data.data1[i].id == d.id) {\n      //         // console.log(data1.data1[i].num)\n      //         return data.data1[i].num + 0.05\n      //       }\n      //     } \n      //   })\n      //   .style(\n      //   \"fill\", \n      //   function(d){\n      //     for (let i = 0; i < data.data2.length ; i++){\n      //       if (data.data2[i].id == d.id) {\n      //         // console.log(data2.data2[i].num)\n      //         if (data.data2[i].num>=0.5){\n      //           return \"#9865ff\"\n      //           // return \"#171edc\"\n      //         }else{\n      //           return \"#f9ff66\"\n      //           // return \"#f8e426\"\n      //         }\n      //       }\n      //     } \n      //   })\n      // console.log(statesData[0])\n      \n      },[statesData.length]\n  )\n  \n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}