{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/MapWithCity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport d3Tip from \"d3-tip\";\nimport { geoAlbersUsa } from \"d3-geo\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MapWithCity(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_050_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      const projection = geoAlbersUsa().scale(props.scaleSend).translate([960 / 2, 600 / 2]);\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n      const chart = chartEl.append(\"g\");\n      const path = d3.geoPath().projection(projection);\n      chart.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n        return d.properties.NAME;\n      }).attr(\"d\", path).style(\"stroke\", function (d) {\n        return \"494949\";\n      }).style(\"stroke-width\", function (d) {\n        // if (props.selectVote) {\n        return 0.01; // }\n      });\n    })();\n  }, [props.scaleSend, props.selectCases, props.selectPolicy, props.selectVote, props.selectGunRate, props.selectCity, props.selectUni, props.searchData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map MapCity\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MapWithCity, \"OuW6a4+tTBK7cRORLpKMF89ZMyY=\");\n\n_c = MapWithCity;\nexport default MapWithCity;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapWithCity\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/MapWithCity.js"],"names":["React","useState","useEffect","d3Tip","geoAlbersUsa","d3","MapWithCity","props","ref","useRef","statesData","setStatesData","res","fetch","statesDataCombine","json","features","projection","scale","scaleSend","translate","chartEl","select","current","selectAll","remove","chart","append","path","geoPath","data","enter","attr","d","properties","NAME","style","selectCases","selectPolicy","selectVote","selectGunRate","selectCity","selectUni","searchData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE1B,QAAMC,GAAG,GAAGR,KAAK,CAACS,MAAN,CAAa,IAAb,CAAZ;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AAEX,YAAMU,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,YAAMC,iBAAiB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAhC;AACA,YAAML,UAAU,GAAGI,iBAAiB,CAACE,QAArC;AACAL,MAAAA,aAAa,CAACD,UAAD,CAAb;AAEA,YAAMO,UAAU,GAAGb,YAAY,GAC9Bc,KADkB,CACZX,KAAK,CAACY,SADM,EAElBC,SAFkB,CAER,CAAC,MAAM,CAAP,EAAU,MAAM,CAAhB,CAFQ,CAAnB;AAIA,YAAMC,OAAO,GAAGhB,EAAE,CAACiB,MAAH,CAAUd,GAAG,CAACe,OAAd,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,GAAlB,EAAuBC,MAAvB;AAEA,YAAMC,KAAK,GAAGL,OAAO,CAACM,MAAR,CAAe,GAAf,CAAd;AAEA,YAAMC,IAAI,GAAGvB,EAAE,CAACwB,OAAH,GACVZ,UADU,CACCA,UADD,CAAb;AAGAS,MAAAA,KAAK,CAACF,SAAN,CAAgB,MAAhB,EACGM,IADH,CACQpB,UADR,EAEGqB,KAFH,GAGGJ,MAHH,CAGU,MAHV,EAIGK,IAJH,CAIQ,OAJR,EAIiB,OAJjB,EAKGA,IALH,CAKQ,IALR,EAKc,UAAUC,CAAV,EAAa;AACvB,eAAOA,CAAC,CAACC,UAAF,CAAaC,IAApB;AACD,OAPH,EAQGH,IARH,CAQQ,GARR,EAQaJ,IARb,EASGQ,KATH,CAUI,QAVJ,EAUc,UAAUH,CAAV,EAAa;AACrB,eAAO,QAAP;AACD,OAZL,EAcGG,KAdH,CAeI,cAfJ,EAeoB,UAAUH,CAAV,EAAa;AAC3B;AACE,eAAO,IAAP,CAFyB,CAG3B;AACD,OAnBL;AAsBD,KAzCD;AA2CD,GA5CQ,EA4CN,CAAC1B,KAAK,CAACY,SAAP,EAAkBZ,KAAK,CAAC8B,WAAxB,EAAqC9B,KAAK,CAAC+B,YAA3C,EAAyD/B,KAAK,CAACgC,UAA/D,EAA2EhC,KAAK,CAACiC,aAAjF,EAA+FjC,KAAK,CAACkC,UAArG,EAAgHlC,KAAK,CAACmC,SAAtH,EAAgInC,KAAK,CAACoC,UAAtI,CA5CM,CAAT;AAgDA,sBAEI;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,mBAArC;AAAyD,IAAA,GAAG,EAAEnC;AAA9D;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMD;;GA3DQF,W;;KAAAA,W;AA6DT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport d3Tip from \"d3-tip\"\nimport { geoAlbersUsa } from \"d3-geo\"\nimport * as d3 from \"d3\"\n\nfunction MapWithCity(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n\n      const res = await fetch('./gz_2010_us_050_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n\n      const projection = geoAlbersUsa()\n      .scale(props.scaleSend)\n      .translate([960 / 2, 600 / 2])\n\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n\n      const chart = chartEl.append(\"g\")\n\n      const path = d3.geoPath()\n        .projection(projection);\n\n      chart.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function (d) {\n          return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        .style(\n          \"stroke\", function (d) {\n            return \"494949\"\n          }\n        )\n        .style(\n          \"stroke-width\", function (d) {\n            // if (props.selectVote) {\n              return 0.01\n            // }\n          }\n        )\n\n    })();\n\n  }, [props.scaleSend, props.selectCases, props.selectPolicy, props.selectVote, props.selectGunRate,props.selectCity,props.selectUni,props.searchData]\n  )\n\n\n  return (\n\n      <svg viewBox=\"0 0 960 600\" className=\"usMap Map MapCity\" ref={ref}>\n      </svg>\n\n  )\n}\n\nexport default MapWithCity"]},"metadata":{},"sourceType":"module"}