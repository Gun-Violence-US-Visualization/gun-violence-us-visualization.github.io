{"ast":null,"code":"/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection';\nimport { selection, select } from 'd3-selection'; // Public - constructs a new tooltip\n//\n// Returns a tip\n\nexport default function () {\n  var direction = d3TipDirection,\n      offset = d3TipOffset,\n      html = d3TipHTML,\n      rootElement = document.body,\n      node = initNode(),\n      svg = null,\n      point = null,\n      target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    if (!svg) return;\n    point = svg.createSVGPoint();\n    rootElement.appendChild(node);\n  } // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n\n\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir = direction.apply(this, args),\n        nodel = getNodeEl(),\n        i = directions.length,\n        coords,\n        scrollTop = document.documentElement.scrollTop || rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft || rootElement.scrollLeft;\n    nodel.html(content).style('opacity', 1).style('pointer-events', 'all');\n\n    while (i--) nodel.classed(directions[i], false);\n\n    coords = directionCallbacks.get(dir).apply(this);\n    nodel.classed(dir, true).style('top', coords.top + poffset[0] + scrollTop + 'px').style('left', coords.left + poffset[1] + scrollLeft + 'px');\n    return tip;\n  }; // Public - hide the tooltip\n  //\n  // Returns a tip\n\n\n  tip.hide = function () {\n    var nodel = getNodeEl();\n    nodel.style('opacity', 0).style('pointer-events', 'none');\n    return tip;\n  }; // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.attr = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.attr.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n\n\n  tip.style = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n);\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    selection.prototype.style.apply(getNodeEl(), args);\n    return tip;\n  }; // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n\n\n  tip.direction = function (v) {\n    if (!arguments.length) return direction;\n    direction = v == null ? v : functor(v);\n    return tip;\n  }; // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n\n\n  tip.offset = function (v) {\n    if (!arguments.length) return offset;\n    offset = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n\n\n  tip.html = function (v) {\n    if (!arguments.length) return html;\n    html = v == null ? v : functor(v);\n    return tip;\n  }; // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n\n\n  tip.rootElement = function (v) {\n    if (!arguments.length) return rootElement;\n    rootElement = v == null ? v : functor(v);\n    return tip;\n  }; // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n\n\n  tip.destroy = function () {\n    if (node) {\n      getNodeEl().remove();\n      node = null;\n    }\n\n    return tip;\n  };\n\n  function d3TipDirection() {\n    return 'n';\n  }\n\n  function d3TipOffset() {\n    return [0, 0];\n  }\n\n  function d3TipHTML() {\n    return ' ';\n  }\n\n  var directionCallbacks = map({\n    n: directionNorth,\n    s: directionSouth,\n    e: directionEast,\n    w: directionWest,\n    nw: directionNorthWest,\n    ne: directionNorthEast,\n    sw: directionSouthWest,\n    se: directionSouthEast\n  }),\n      directions = directionCallbacks.keys();\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this);\n    return {\n      top: bbox.se.y,\n      left: bbox.se.x\n    };\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'));\n    div.style('position', 'absolute').style('top', 0).style('opacity', 0).style('pointer-events', 'none').style('box-sizing', 'border-box');\n    return div.node();\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node();\n    if (!svgNode) return null;\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode;\n    return svgNode.ownerSVGElement;\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode(); // re-add node to DOM\n\n      rootElement.appendChild(node);\n    }\n\n    return select(node);\n  } // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n\n\n  function getScreenBBox(targetShape) {\n    var targetel = target || targetShape;\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n\n    var bbox = {},\n        matrix = targetel.getScreenCTM(),\n        tbbox = targetel.getBBox(),\n        width = tbbox.width,\n        height = tbbox.height,\n        x = tbbox.x,\n        y = tbbox.y;\n    point.x = x;\n    point.y = y;\n    bbox.nw = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x -= width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y -= height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x -= width / 2;\n    point.y -= height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.s = point.matrixTransform(matrix);\n    return bbox;\n  } // Private - replace D3JS 3.X d3.functor() function\n\n\n  function functor(v) {\n    return typeof v === 'function' ? v : function () {\n      return v;\n    };\n  }\n\n  return tip;\n}","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/node_modules/d3-tip/index.js"],"names":["map","selection","select","direction","d3TipDirection","offset","d3TipOffset","html","d3TipHTML","rootElement","document","body","node","initNode","svg","point","target","tip","vis","getSVGNode","createSVGPoint","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","content","apply","poffset","dir","nodel","getNodeEl","i","directions","coords","scrollTop","documentElement","scrollLeft","style","classed","directionCallbacks","get","top","left","hide","attr","n","v","functor","destroy","remove","directionNorth","s","directionSouth","e","directionEast","w","directionWest","nw","directionNorthWest","ne","directionNorthEast","sw","directionSouthWest","se","directionSouthEast","keys","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","div","createElement","element","svgNode","tagName","toLowerCase","ownerSVGElement","targetShape","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform"],"mappings":"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","sourcesContent":["/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection'\nimport { selection, select } from 'd3-selection'\n// Public - constructs a new tooltip\n//\n// Returns a tip\nexport default function() {\n  var direction   = d3TipDirection,\n      offset      = d3TipOffset,\n      html        = d3TipHTML,\n      rootElement = document.body,\n      node        = initNode(),\n      svg         = null,\n      point       = null,\n      target      = null\n\n  function tip(vis) {\n    svg = getSVGNode(vis)\n    if (!svg) return\n    point = svg.createSVGPoint()\n    rootElement.appendChild(node)\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir     = direction.apply(this, args),\n        nodel   = getNodeEl(),\n        i       = directions.length,\n        coords,\n        scrollTop  = document.documentElement.scrollTop ||\n      rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft ||\n      rootElement.scrollLeft\n\n    nodel.html(content)\n      .style('opacity', 1).style('pointer-events', 'all')\n\n    while (i--) nodel.classed(directions[i], false)\n    coords = directionCallbacks.get(dir).apply(this)\n    nodel.classed(dir, true)\n      .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n      .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n    return tip\n  }\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function() {\n    var nodel = getNodeEl()\n    nodel.style('opacity', 0).style('pointer-events', 'none')\n    return tip\n  }\n\n  // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n  tip.attr = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n)\n    }\n\n    var args =  Array.prototype.slice.call(arguments)\n    selection.prototype.attr.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n  tip.style = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n)\n    }\n\n    var args = Array.prototype.slice.call(arguments)\n    selection.prototype.style.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function(v) {\n    if (!arguments.length) return direction\n    direction = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function(v) {\n    if (!arguments.length) return offset\n    offset = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function(v) {\n    if (!arguments.length) return html\n    html = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n  tip.rootElement = function(v) {\n    if (!arguments.length) return rootElement\n    rootElement = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n  tip.destroy = function() {\n    if (node) {\n      getNodeEl().remove()\n      node = null\n    }\n    return tip\n  }\n\n  function d3TipDirection() { return 'n' }\n  function d3TipOffset() { return [0, 0] }\n  function d3TipHTML() { return ' ' }\n\n  var directionCallbacks = map({\n        n:  directionNorth,\n        s:  directionSouth,\n        e:  directionEast,\n        w:  directionWest,\n        nw: directionNorthWest,\n        ne: directionNorthEast,\n        sw: directionSouthWest,\n        se: directionSouthEast\n      }),\n      directions = directionCallbacks.keys()\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    }\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    }\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    }\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.se.y,\n      left: bbox.se.x\n    }\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'))\n    div\n      .style('position', 'absolute')\n      .style('top', 0)\n      .style('opacity', 0)\n      .style('pointer-events', 'none')\n      .style('box-sizing', 'border-box')\n\n    return div.node()\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node()\n    if (!svgNode) return null\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n    return svgNode.ownerSVGElement\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode()\n      // re-add node to DOM\n      rootElement.appendChild(node)\n    }\n    return select(node)\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox(targetShape) {\n    var targetel   = target || targetShape\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode\n    }\n\n    var bbox       = {},\n        matrix     = targetel.getScreenCTM(),\n        tbbox      = targetel.getBBox(),\n        width      = tbbox.width,\n        height     = tbbox.height,\n        x          = tbbox.x,\n        y          = tbbox.y\n\n    point.x = x\n    point.y = y\n    bbox.nw = point.matrixTransform(matrix)\n    point.x += width\n    bbox.ne = point.matrixTransform(matrix)\n    point.y += height\n    bbox.se = point.matrixTransform(matrix)\n    point.x -= width\n    bbox.sw = point.matrixTransform(matrix)\n    point.y -= height / 2\n    bbox.w = point.matrixTransform(matrix)\n    point.x += width\n    bbox.e = point.matrixTransform(matrix)\n    point.x -= width / 2\n    point.y -= height / 2\n    bbox.n = point.matrixTransform(matrix)\n    point.y += height\n    bbox.s = point.matrixTransform(matrix)\n\n    return bbox\n  }\n\n  // Private - replace D3JS 3.X d3.functor() function\n  function functor(v) {\n    return typeof v === 'function' ? v : function() {\n      return v\n    }\n  }\n\n  return tip\n}\n"]},"metadata":{},"sourceType":"module"}