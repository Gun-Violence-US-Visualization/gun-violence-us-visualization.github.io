{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [eventsData, setEventsData] = useState([]); // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n  // console.log(`OUT${scaleData}`)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n      const res1 = await fetch('./cases.geojson');\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n      const projection = geoAlbersUsa().scale(scaleData).translate([960 / 2, 600 / 2]);\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n      const chart = chartEl.append(\"g\");\n      const path = d3.geoPath().projection(projection);\n      const caseTip = d3.select(\".case\").append(\"div\").attr(\"class\", \"caseTip\").style(\"opacity\", 0);\n      console.log(scaleData);\n      const myColor = d3.scaleLinear().domain([1, 10]).range([\"white\", \"#666666\"]);\n\n      function handleMouseOver(d, i) {\n        // Add interactivity\n        // Use D3 to select element, change color and size\n        d3.select(this).attr({\n          fill: \"orange\",\n          r: radius * 2\n        }); // Specify where to put label of text\n\n        svg.append(\"text\").attr({\n          id: \"t\" + d.x + \"-\" + d.y + \"-\" + i,\n          // Create an id for text so we can select it later for removing on mouseout\n          x: function () {\n            return xScale(d.x) - 30;\n          },\n          y: function () {\n            return yScale(d.y) - 15;\n          }\n        }).text(function () {\n          return [d.x, d.y]; // Value of the text\n        });\n      }\n\n      function handleMouseOut(d, i) {\n        // Use D3 to select element, change color back to normal\n        d3.select(this).attr({\n          fill: \"black\",\n          r: radius\n        }); // Select text by id and then remove\n\n        d3.select(\"#t\" + d.x + \"-\" + d.y + \"-\" + i).remove(); // Remove text location\n      }\n\n      chart.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n        return d.properties.NAME;\n      }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n      // .style(\n      //     \"opacity\", \n      //     function(d){\n      //       for (let i = 0; i < props.data1.length ; i++){\n      //         if (props.data1[i].name == d.properties.NAME) {\n      //           // console.log(data1.data1[i].num)\n      //           return props.data1[i].num + 0.05\n      //         }\n      //       } \n      //     })\n      .style(\"fill\", function (d) {\n        for (let i = 0; i < props.data2.length; i++) {\n          if (props.data2[i].name == d.properties.NAME) {\n            // console.log(myColor(props.data2[i]))\n            console.log(`Here${myColor(props.data2[i].num * 10)}`);\n            console.log(`Here${i}`);\n            console.log(`Here${props.data2[i].num}`);\n            return myColor(props.data2[i].num * 10);\n          }\n        }\n      });\n      chart.selectAll(\".points\").data(eventsData).enter().append(\"circle\").attr(\"class\", \"case\").attr(\"r\", function (d) {\n        // console.log(d)\n        return 4.0; // }\n      }).attr(\"transform\", function (d) {\n        // console.log(d)\n        return \"translate(\" + projection(d.geometry.coordinates) + \")\";\n      });\n    })();\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"mHDCDNg4aNsMKZpgB1SRBpTJyKg=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","useLayoutEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","Map","props","ref","useRef","statesData","setStatesData","scaleData","setScaleData","scaleSend","eventsData","setEventsData","res","fetch","statesDataCombine","json","features","res1","eventsDataCombine","projection","scale","translate","chartEl","select","current","selectAll","remove","chart","append","path","caseTip","attr","style","console","log","myColor","scaleLinear","domain","range","handleMouseOver","d","i","fill","r","radius","svg","id","x","y","xScale","yScale","text","handleMouseOut","data","enter","properties","NAME","data2","length","name","num","geometry","coordinates"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [eventsData, setEventsData] = useState([]);\n\n\n  // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n\n  // console.log(`OUT${scaleData}`)\n  \n\n  useEffect(() => {\n\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n\n      const res1 = await fetch('./cases.geojson')\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n\n      const projection = geoAlbersUsa()\n        .scale(scaleData)\n        .translate([960 / 2, 600 / 2])\n\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n\n      const chart = chartEl.append(\"g\")\n\n      const path = d3.geoPath()\n        .projection(projection);\n\n      const caseTip = d3.select(\".case\").append(\"div\") \n        .attr(\"class\", \"caseTip\")               \n        .style(\"opacity\", 0);\n\n      console.log(scaleData);\n      const myColor = d3.scaleLinear().domain([1, 10]).range([\"white\",\"#666666\"])\n\n      function handleMouseOver(d, i) {  // Add interactivity\n\n        // Use D3 to select element, change color and size\n        d3.select(this).attr({\n          fill: \"orange\",\n          r: radius * 2\n        });\n\n        // Specify where to put label of text\n        svg.append(\"text\").attr({\n           id: \"t\" + d.x + \"-\" + d.y + \"-\" + i,  // Create an id for text so we can select it later for removing on mouseout\n            x: function() { return xScale(d.x) - 30; },\n            y: function() { return yScale(d.y) - 15; }\n        })\n        .text(function() {\n          return [d.x, d.y];  // Value of the text\n        });\n      }\n\n  function handleMouseOut(d, i) {\n        // Use D3 to select element, change color back to normal\n        d3.select(this).attr({\n          fill: \"black\",\n          r: radius\n        });\n\n        // Select text by id and then remove\n        d3.select(\"#t\" + d.x + \"-\" + d.y + \"-\" + i).remove();  // Remove text location\n      }\n\n\n\n      chart.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function (d) {\n          return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        // .style(\n        //     \"opacity\", \n        //     function(d){\n        //       for (let i = 0; i < props.data1.length ; i++){\n        //         if (props.data1[i].name == d.properties.NAME) {\n        //           // console.log(data1.data1[i].num)\n        //           return props.data1[i].num + 0.05\n        //         }\n        //       } \n        //     })\n        .style(\n          \"fill\",\n          function (d) {\n            for (let i = 0; i < props.data2.length; i++) {\n              if (props.data2[i].name == d.properties.NAME) {\n                // console.log(myColor(props.data2[i]))\n                console.log(`Here${myColor(props.data2[i].num * 10)}`)\n                console.log(`Here${i}`)\n                console.log(`Here${props.data2[i].num}`)\n                return myColor(props.data2[i].num * 10)\n              }\n            }\n          })\n          \n\n      chart\n        .selectAll(\".points\")\n        .data(eventsData).enter()\n        .append(\"circle\")\n        .attr(\"class\", \"case\")\n        .attr(\"r\",\n          function (d) {\n            // console.log(d)\n            return 4.0\n            // }\n          })\n        .attr(\"transform\",\n\n          function (d) {\n            // console.log(d)\n            return \"translate(\" + projection(d.geometry.coordinates) + \")\"\n          })\n    })();\n\n  }, [statesData.length]\n  )\n\n\n  return (\n\n    <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\n\n\nexport default Map"]},"metadata":{},"sourceType":"module"}