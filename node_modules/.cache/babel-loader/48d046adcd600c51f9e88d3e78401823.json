{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nfunction Map(data) {\n  _s();\n\n  const [statesData, setStatesData] = useState([]);\n  const path = d3.geoPath(); // const [statesTest, setStatesTest] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./us.json');\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n  console.log(data);\n  const ref = useD3(svg => {\n    const map = svg.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"id\", statesData.id).attr(\"d\", path(statesData.shape));\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"HGQlez1OJrZ5SCqg76S2m6X37jw=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js"],"names":["React","useState","useEffect","geoEqualEarth","geoPath","useD3","d3","feature","projection","scale","translate","Map","data","statesData","setStatesData","path","res","fetch","json","console","log","ref","svg","map","selectAll","enter","append","attr","id","shape"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,QAAvC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAU,GAAGL,aAAa,GAC7BM,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAKA,SAASC,GAAT,CAAaC,IAAb,EAAkB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMc,IAAI,GAAGT,EAAE,CAACF,OAAH,EAAb,CAHgB,CAKhB;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMc,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,YAAMJ,UAAU,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAzB;AACAJ,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,QAAMS,GAAG,GAAGhB,KAAK,CACdiB,GAAD,IAAS;AACP,UAAMC,GAAG,GAAGD,GAAG,CAACE,SAAJ,CAAc,MAAd,EAAsBZ,IAAtB,CAA2BC,UAA3B,EAAuCY,KAAvC,GAA+CC,MAA/C,CAAsD,MAAtD,EACXC,IADW,CACN,IADM,EACAd,UAAU,CAACe,EADX,EAEXD,IAFW,CAEN,GAFM,EAEDZ,IAAI,CAACF,UAAU,CAACgB,KAAZ,CAFH,CAAZ;AAGD,GALc,CAAjB;AAQA,sBACG;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,OAArC;AAA6C,IAAA,GAAG,EAAER;AAAlD;AAAA;AAAA;AAAA;AAAA,UADH;AAeD;;GAxCQV,G;UAiBKN,K;;;KAjBLM,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([ 800 / 2, 450 / 2 ])\n\n\nfunction Map(data){\n  const [statesData, setStatesData] = useState([]);\n\n  const path = d3.geoPath();\n\n  // const [statesTest, setStatesTest] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./us.json')\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n\n  console.log(data)\n\n  const ref = useD3(\n    (svg) => {\n      const map = svg.selectAll(\"path\").data(statesData).enter().append(\"path\")\n      .attr(\"id\", statesData.id)\n      .attr(\"d\", path(statesData.shape));\n    }\n  )\n  \n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"usMap\" ref={ref}>\n      {/* {statesData.map((stateData, index) =>\n        <path\n          className=\"state\"\n          id={stateData.id}\n          style={{cursor: \"pointer\"}}\n          key={index}\n          strokeWidth=\"0.5px\"\n          d={stateData.shape} \n        >\n        </path>\n      )} */}\n    </svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}