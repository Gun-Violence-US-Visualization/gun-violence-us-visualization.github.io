{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nfunction Map(data) {\n  _s();\n\n  const [statesData, setStatesData] = useState([]); // const [statesTest, setStatesTest] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./us.json');\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap\",\n    children: statesData.map((stateData, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"state\",\n      id: stateData.id,\n      style: {\n        cursor: \"pointer\"\n      },\n      strokeWidth: \"0.5px\",\n      d: stateData.shape\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"reEC43PI7doWY+URVWfGlTOQ7jk=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/Map.js"],"names":["React","useState","useEffect","geoEqualEarth","geoPath","d3","feature","projection","scale","translate","Map","data","statesData","setStatesData","res","fetch","json","console","log","map","stateData","index","id","cursor","shape"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,QAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAU,GAAGJ,aAAa,GAC7BK,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAKA,SAASC,GAAT,CAAaC,IAAb,EAAkB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CADgB,CAGhB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMY,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,YAAMH,UAAU,GAAG,MAAME,GAAG,CAACE,IAAJ,EAAzB;AACAH,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACG;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,OAArC;AAAA,cACEC,UAAU,CAACO,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,EAAE,EAAED,SAAS,CAACE,EAFhB;AAGE,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAHT;AAKE,MAAA,WAAW,EAAC,OALd;AAME,MAAA,CAAC,EAAEH,SAAS,CAACI;AANf,OAIOH,KAJP;AAAA;AAAA;AAAA;AAAA,YADD;AADF;AAAA;AAAA;AAAA;AAAA,UADH;AAeD;;GA9BQX,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([ 800 / 2, 450 / 2 ])\n\n\nfunction Map(data){\n  const [statesData, setStatesData] = useState([]);\n\n  // const [statesTest, setStatesTest] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./us.json')\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n\n  console.log(data)\n\n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"usMap\">\n      {statesData.map((stateData, index) =>\n        <path\n          className=\"state\"\n          id={stateData.id}\n          style={{cursor: \"pointer\"}}\n          key={index}\n          strokeWidth=\"0.5px\"\n          d={stateData.shape}\n        >\n        </path>\n      )}\n    </svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}