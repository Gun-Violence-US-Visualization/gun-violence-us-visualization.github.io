{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [projection, setProjection] = useState(props.scaleSend);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n      const projection = geoAlbersUsa().scale(scaleData).translate([960 / 2, 600 / 2]);\n      setProjection(Projection);\n    })();\n  }, []); // const ref = useD3(\n  //   (svg) => {\n\n  console.log(`OUT${props.scaleSend}`);\n  useEffect(() => {\n    const chartEl = d3.select(ref.current);\n    chartEl.selectAll(\"*\").remove();\n    const chart = chartEl.append(\"g\");\n    console.log(`IN${props.scaleSend}`);\n    const path = d3.geoPath().projection(projection);\n    console.log(props.scaleSend);\n    const myColor = d3.scaleLinear().domain([0.0, 1.0]).range([\"white\", \"red\"]);\n    chart.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n      // console.log(d)\n      return d.properties.NAME;\n    }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n    .style(\"opacity\", function (d) {\n      for (let i = 0; i < props.data1.length; i++) {\n        if (props.data1[i].name == d.properties.NAME) {\n          // console.log(data1.data1[i].num)\n          return props.data1[i].num + 0.05;\n        }\n      }\n    }).style(\"fill\", function (d) {\n      for (let i = 0; i < props.data2.length; i++) {\n        if (props.data2[i].name == d.properties.NAME) {\n          return myColor(d);\n        }\n      }\n    });\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"5/t0+x2wLAcMGKjqm9apahzCvoQ=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","useLayoutEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","Map","props","ref","useRef","statesData","setStatesData","scaleData","setScaleData","scaleSend","projection","setProjection","res","fetch","statesDataCombine","json","features","scale","translate","Projection","console","log","chartEl","select","current","selectAll","remove","chart","append","path","myColor","scaleLinear","domain","range","data","enter","attr","d","properties","NAME","style","i","data1","length","name","num","data2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath,geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [projection, setProjection] = useState(props.scaleSend);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n      const projection = geoAlbersUsa()\n      .scale(scaleData)\n      .translate([ 960 / 2, 600 / 2 ])\n      setProjection(Projection)\n    })();\n  }, []);\n\n  // const ref = useD3(\n  //   (svg) => {\n\n\n\n    console.log(`OUT${props.scaleSend}`)\n\nuseEffect(() => {\n    const chartEl = d3.select(ref.current);\n    chartEl.selectAll(\"*\").remove();\n\n    const chart = chartEl.append(\"g\")\n\n    console.log(`IN${props.scaleSend}`)\n\n    const path = d3.geoPath()\n    .projection(projection);\n\n      console.log(props.scaleSend);\n      const myColor = d3.scaleLinear().domain([0.0,1.0]).range([\"white\", \"red\"])\n\n      chart.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function(d){\n          // console.log(d)\n        return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        .style(\n            \"opacity\", \n            function(d){\n              for (let i = 0; i < props.data1.length ; i++){\n                if (props.data1[i].name == d.properties.NAME) {\n                  // console.log(data1.data1[i].num)\n                  return props.data1[i].num + 0.05\n                }\n              } \n            })\n        .style(\n            \"fill\", \n            function(d){\n              for (let i = 0; i < props.data2.length ; i++){\n                if (props.data2[i].name == d.properties.NAME) {\n\n                  return myColor(d)\n                }\n              } \n            })\n      \n      },[statesData.length]\n  )\n\n  \n  return (\n      \n     <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}