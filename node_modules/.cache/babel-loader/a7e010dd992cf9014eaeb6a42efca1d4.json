{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoAlbersUsa() //   .scale(1250)\n.translate([960 / 2, 600 / 2]);\n\nfunction Events(data) {\n  _s();\n\n  const [eventsData, setEventsData] = useState([]); // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./mass_shooting_events_stanford_msa_release.geojson');\n      const eventsDataCombine = await res.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n    })();\n  }, []);\n  console.log(eventsData); //   console.log(eventsData.features)\n\n  const ref = useD3(svg => {\n    svg.selectAll(\".points\").data(eventsData).enter().append(\"circle\").attr(\"class\", \"event\").attr(\"r\", function (d) {\n      console.log(d.properties['Number of Civilian Fatalities']);\n      return (d.properties['Number of Civilian Fatalities'] + d.properties[\"Number of Civilian Injured\"]) / 3 + 0.1;\n    }) // .style(\n    //     \"fill\",\"red\"\n    // )\n    .attr(\"transform\", function (d) {\n      // setInterval(() =>\n      // console.log(d)\n      // ,300)\n      return \"translate(\" + projection(d.geometry.coordinates) + \")\";\n    });\n  }, [eventsData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"Events Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Events, \"C/sGpUcbJR5pUMoFFCndJ88m10E=\", false, function () {\n  return [useD3];\n});\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Events.js"],"names":["React","useState","useEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","projection","translate","Events","data","eventsData","setEventsData","res","fetch","eventsDataCombine","json","features","console","log","ref","svg","selectAll","enter","append","attr","d","properties","geometry","coordinates","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA4BC,YAA5B,QAAgD,QAAhD;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAU,GAAGJ,YAAY,GAC/B;AAD+B,CAE5BK,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAMA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CADoB,CAEpB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMa,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAD,CAAvB;AACA,YAAMC,iBAAiB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAhC;AACA,YAAML,UAAU,GAAGI,iBAAiB,CAACE,QAArC;AACAL,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ,EAboB,CActB;;AAEE,QAAMS,GAAG,GAAGhB,KAAK,CACdiB,GAAD,IAAS;AACPA,IAAAA,GAAG,CACAC,SADH,CACa,SADb,EAEGZ,IAFH,CAEQC,UAFR,EAEoBY,KAFpB,GAGGC,MAHH,CAGU,QAHV,EAIGC,IAJH,CAIQ,OAJR,EAIiB,OAJjB,EAKGA,IALH,CAKQ,GALR,EAMM,UAAUC,CAAV,EAAa;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,UAAF,CAAa,+BAAb,CAAZ;AACA,aAAO,CAACD,CAAC,CAACC,UAAF,CAAa,+BAAb,IAA8CD,CAAC,CAACC,UAAF,CAAa,4BAAb,CAA/C,IAA2F,CAA3F,GAA6F,GAApG;AACH,KATP,EAUE;AACA;AACA;AAZF,KAaGF,IAbH,CAaQ,WAbR,EAeM,UAASC,CAAT,EAAY;AACZ;AACI;AAEJ;AACA,aAAO,eAAenB,UAAU,CAACmB,CAAC,CAACE,QAAF,CAAWC,WAAZ,CAAzB,GAAoD,GAA3D;AACH,KArBH;AAsBC,GAxBY,EAwBX,CAAClB,UAAU,CAACmB,MAAZ,CAxBW,CAAjB;AA2BA,sBACG;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,YAArC;AAAkD,IAAA,GAAG,EAAEV;AAAvD;AAAA;AAAA;AAAA;AAAA,UADH;AAGD;;GA9CQX,M;UAgBKL,K;;;KAhBLK,M;AAgDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { geoAlbers, geoPath,geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst projection = geoAlbersUsa()\n//   .scale(1250)\n  .translate([ 960 / 2, 600 / 2 ])\n\n\n\nfunction Events(data) {\n  const [eventsData, setEventsData] = useState([]);\n  // console.log(data)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./mass_shooting_events_stanford_msa_release.geojson')\n      const eventsDataCombine = await res.json();\n      const eventsData = eventsDataCombine.features\n      setEventsData(eventsData);\n    })();\n  }, []);\n\n  console.log(eventsData)\n//   console.log(eventsData.features)\n\n  const ref = useD3(\n    (svg) => { \n      svg\n        .selectAll(\".points\")\n        .data(eventsData).enter()\n        .append(\"circle\")\n        .attr(\"class\", \"event\")\n        .attr(\"r\", \n            function (d) { \n                console.log(d.properties['Number of Civilian Fatalities'])\n                return (d.properties['Number of Civilian Fatalities']+d.properties[\"Number of Civilian Injured\"])/3+0.1\n            })\n        // .style(\n        //     \"fill\",\"red\"\n        // )\n        .attr(\"transform\", \n        \n            function(d) { \n            // setInterval(() =>\n                // console.log(d)\n                 \n            // ,300)\n            return \"translate(\" + projection(d.geometry.coordinates) + \")\"\n        })\n      },[eventsData.length]\n  )\n  \n  return (\n     <svg viewBox=\"0 0 960 600\" className=\"Events Map\" ref={ref}></svg>\n  )\n}\n\nexport default Events"]},"metadata":{},"sourceType":"module"}