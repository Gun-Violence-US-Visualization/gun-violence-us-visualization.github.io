{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection1 = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nfunction Map(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [projection, setProjection] = useState(projection1);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      const projection = geoAlbersUsa().scale(props.scaleSend).translate([960 / 2, 600 / 2]);\n      setProjection(projection);\n    })();\n  }, []); // const ref = useD3(\n  //   (svg) => {\n\n  useEffect(() => {\n    const chartEl = d3.select(\"svg\");\n    chartEl.selectAll(\"*\").remove();\n    const path = d3.geoPath().projection(projection);\n    console.log(props.scaleSend);\n    const myColor = d3.scaleLinear().domain([0.0, 1.0]).range([\"white\", \"red\"]);\n    chartEl.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n      // console.log(d)\n      return d.properties.NAME;\n    }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n    .style(\"opacity\", function (d) {\n      for (let i = 0; i < props.data1.length; i++) {\n        if (props.data1[i].name == d.properties.NAME) {\n          // console.log(data1.data1[i].num)\n          return props.data1[i].num + 0.05;\n        }\n      }\n    }).style(\"fill\", function (d) {\n      for (let i = 0; i < props.data2.length; i++) {\n        if (props.data2[i].name == d.properties.NAME) {\n          return myColor(d);\n        }\n      }\n    });\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Map, \"yuk1z7i1JHcweZ9oAm4618MPqc0=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","projection1","geoEqualEarth","scale","translate","Map","props","ref","useRef","statesData","setStatesData","projection","setProjection","res","fetch","statesDataCombine","json","features","scaleSend","chartEl","select","selectAll","remove","path","console","log","myColor","scaleLinear","domain","range","data","enter","append","attr","d","properties","NAME","style","i","data1","length","name","num","data2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath,geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst projection1 = geoEqualEarth()\n  .scale(160)\n  .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [projection, setProjection] = useState(projection1);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n\n      const projection = geoAlbersUsa()\n      .scale(props.scaleSend)\n      .translate([ 960 / 2, 600 / 2 ])\n\n      setProjection(projection);\n    })();\n  }, []);\n\n  // const ref = useD3(\n  //   (svg) => {\n\n  useEffect(() => {\n    const chartEl = d3.select(\"svg\");\n    chartEl.selectAll(\"*\").remove();\n  \n    const path = d3.geoPath()\n    .projection(projection);\n\n      console.log(props.scaleSend);\n      const myColor = d3.scaleLinear().domain([0.0,1.0]).range([\"white\", \"red\"])\n\n      chartEl.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function(d){\n          // console.log(d)\n        return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        .style(\n            \"opacity\", \n            function(d){\n              for (let i = 0; i < props.data1.length ; i++){\n                if (props.data1[i].name == d.properties.NAME) {\n                  // console.log(data1.data1[i].num)\n                  return props.data1[i].num + 0.05\n                }\n              } \n            })\n        .style(\n            \"fill\", \n            function(d){\n              for (let i = 0; i < props.data2.length ; i++){\n                if (props.data2[i].name == d.properties.NAME) {\n\n                  return myColor(d)\n                }\n              } \n            })\n      \n      },[statesData.length]\n  )\n\n  \n  return (\n      \n     <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}