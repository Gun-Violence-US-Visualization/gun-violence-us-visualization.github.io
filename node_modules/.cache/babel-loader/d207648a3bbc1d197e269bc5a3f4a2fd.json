{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [eventsData, setEventsData] = useState([]); // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n  // console.log(`OUT${scaleData}`)\n\n  let tip = d3 - tip().attr('class', 'd3-tip').offset([-10, 0]).html(d => {\n    return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\";\n  });\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n      const res1 = await fetch('./cases.geojson');\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n      const projection = geoAlbersUsa().scale(scaleData).translate([960 / 2, 600 / 2]);\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n      const chart = chartEl.append(\"g\");\n      const path = d3.geoPath().projection(projection);\n      tip = d3 - tip().attr('class', 'd3-tip').offset([-10, 0]).html(d => {\n        return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\";\n      }); // console.log(scaleData);\n\n      const myColor = d3.scaleLinear().domain([1, 10]).range([\"white\", \"#9865ff\"]);\n      chart.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n        return d.properties.NAME;\n      }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n      // .style(\n      //     \"opacity\", \n      //     function(d){\n      //       for (let i = 0; i < props.data1.length ; i++){\n      //         if (props.data1[i].name == d.properties.NAME) {\n      //           // console.log(data1.data1[i].num)\n      //           return props.data1[i].num + 0.05\n      //         }\n      //       } \n      //     })\n      .style(\"fill\", function (d) {\n        for (let i = 0; i < props.data2.length; i++) {\n          if (props.data2[i].name == d.properties.NAME) {\n            // console.log(myColor(props.data2[i]))\n            console.log(`Here${myColor(props.data2[i].num * 10)}`);\n            console.log(`Here${i}`);\n            console.log(`Here${props.data2[i].num}`);\n            return myColor(props.data2[i].num * 10);\n          }\n        }\n      });\n      chart.selectAll(\".points\").data(eventsData).enter().append(\"circle\").attr(\"class\", \"event\").attr(\"r\", function (d) {\n        // console.log(d)\n        return 4.0; // }\n      }).attr(\"transform\", function (d) {\n        // console.log(d)\n        return \"translate(\" + projection(d.geometry.coordinates) + \")\";\n      });\n    })();\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"mHDCDNg4aNsMKZpgB1SRBpTJyKg=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","useLayoutEffect","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","Map","props","ref","useRef","statesData","setStatesData","scaleData","setScaleData","scaleSend","eventsData","setEventsData","tip","attr","offset","html","d","properties","name","res","fetch","statesDataCombine","json","features","res1","eventsDataCombine","projection","scale","translate","chartEl","select","current","selectAll","remove","chart","append","path","myColor","scaleLinear","domain","range","data","enter","NAME","style","i","data2","length","console","log","num","geometry","coordinates"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D,C,CACA;;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,YAA7B,QAAiD,QAAjD;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;AACA;AACA;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,QAAMC,GAAG,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAZ;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACU,KAAK,CAACO,SAAP,CAA1C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C,CALkB,CAQlB;AACA;AACA;AAEA;;AAEA,MAAIoB,GAAG,GAAGb,EAAE,GAACa,GAAG,GACTC,IADM,CACD,OADC,EACQ,QADR,EAENC,MAFM,CAEC,CAAC,CAAC,EAAF,EAAM,CAAN,CAFD,EAGNC,IAHM,CAGAC,CAAD,IAAO;AACX,WAAO,qDAAqDA,CAAC,CAACC,UAAF,CAAaC,IAAlE,GAAyE,aAAhF;AACD,GALM,CAAb;AAOAzB,EAAAA,SAAS,CAAC,MAAM;AAEd,KAAC,YAAY;AACX,YAAM0B,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,YAAMC,iBAAiB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAhC;AACA,YAAMjB,UAAU,GAAGgB,iBAAiB,CAACE,QAArC;AACAjB,MAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,MAAAA,YAAY,CAACN,KAAK,CAACO,SAAP,CAAZ;AAEA,YAAMe,IAAI,GAAG,MAAMJ,KAAK,CAAC,iBAAD,CAAxB;AACA,YAAMK,iBAAiB,GAAG,MAAMD,IAAI,CAACF,IAAL,EAAhC;AACA,YAAMZ,UAAU,GAAGe,iBAAiB,CAACF,QAArC;AACAZ,MAAAA,aAAa,CAACD,UAAD,CAAb;AAEA,YAAMgB,UAAU,GAAG7B,YAAY,GAC5B8B,KADgB,CACVpB,SADU,EAEhBqB,SAFgB,CAEN,CAAC,MAAM,CAAP,EAAU,MAAM,CAAhB,CAFM,CAAnB;AAIA,YAAMC,OAAO,GAAG9B,EAAE,CAAC+B,MAAH,CAAU3B,GAAG,CAAC4B,OAAd,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,GAAlB,EAAuBC,MAAvB;AAEA,YAAMC,KAAK,GAAGL,OAAO,CAACM,MAAR,CAAe,GAAf,CAAd;AAEA,YAAMC,IAAI,GAAGrC,EAAE,CAACH,OAAH,GACV8B,UADU,CACCA,UADD,CAAb;AAGAd,MAAAA,GAAG,GAAGb,EAAE,GAACa,GAAG,GACTC,IADM,CACD,OADC,EACQ,QADR,EAENC,MAFM,CAEC,CAAC,CAAC,EAAF,EAAM,CAAN,CAFD,EAGNC,IAHM,CAGAC,CAAD,IAAO;AACX,eAAO,qDAAqDA,CAAC,CAACC,UAAF,CAAaC,IAAlE,GAAyE,aAAhF;AACD,OALM,CAAT,CAxBW,CA+BX;;AACA,YAAMmB,OAAO,GAAGtC,EAAE,CAACuC,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,EAAJ,CAAxB,EAAiCC,KAAjC,CAAuC,CAAC,OAAD,EAAU,SAAV,CAAvC,CAAhB;AAIAN,MAAAA,KAAK,CAACF,SAAN,CAAgB,MAAhB,EACGS,IADH,CACQpC,UADR,EAEGqC,KAFH,GAGGP,MAHH,CAGU,MAHV,EAIGtB,IAJH,CAIQ,OAJR,EAIiB,OAJjB,EAKGA,IALH,CAKQ,IALR,EAKc,UAAUG,CAAV,EAAa;AACvB,eAAOA,CAAC,CAACC,UAAF,CAAa0B,IAApB;AACD,OAPH,EAQG9B,IARH,CAQQ,GARR,EAQauB,IARb,EASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF,OAoBGQ,KApBH,CAqBI,MArBJ,EAsBI,UAAU5B,CAAV,EAAa;AACX,aAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,KAAK,CAAC4C,KAAN,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AAC3C,cAAI3C,KAAK,CAAC4C,KAAN,CAAYD,CAAZ,EAAe3B,IAAf,IAAuBF,CAAC,CAACC,UAAF,CAAa0B,IAAxC,EAA8C;AAC5C;AACAK,YAAAA,OAAO,CAACC,GAAR,CAAa,OAAMZ,OAAO,CAACnC,KAAK,CAAC4C,KAAN,CAAYD,CAAZ,EAAeK,GAAf,GAAqB,EAAtB,CAA0B,EAApD;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAa,OAAMJ,CAAE,EAArB;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAa,OAAM/C,KAAK,CAAC4C,KAAN,CAAYD,CAAZ,EAAeK,GAAI,EAAtC;AACA,mBAAOb,OAAO,CAACnC,KAAK,CAAC4C,KAAN,CAAYD,CAAZ,EAAeK,GAAf,GAAqB,EAAtB,CAAd;AACD;AACF;AACF,OAhCL;AAkCAhB,MAAAA,KAAK,CACFF,SADH,CACa,SADb,EAEGS,IAFH,CAEQ/B,UAFR,EAEoBgC,KAFpB,GAGGP,MAHH,CAGU,QAHV,EAIGtB,IAJH,CAIQ,OAJR,EAIiB,OAJjB,EAKGA,IALH,CAKQ,GALR,EAMI,UAAUG,CAAV,EAAa;AACX;AACA,eAAO,GAAP,CAFW,CAGX;AACD,OAVL,EAWGH,IAXH,CAWQ,WAXR,EAaI,UAAUG,CAAV,EAAa;AACX;AACA,eAAO,eAAeU,UAAU,CAACV,CAAC,CAACmC,QAAF,CAAWC,WAAZ,CAAzB,GAAoD,GAA3D;AACD,OAhBL;AAiBD,KAvFD;AAyFD,GA3FQ,EA2FN,CAAC/C,UAAU,CAAC0C,MAAZ,CA3FM,CAAT;AA+FA,sBAEE;AAAK,IAAA,OAAO,EAAC,aAAb;AAA2B,IAAA,SAAS,EAAC,WAArC;AAAiD,IAAA,GAAG,EAAE5C;AAAtD;AAAA;AAAA;AAAA;AAAA,UAFF;AAID;;GAxHQF,G;;KAAAA,G;AA0HT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  const [eventsData, setEventsData] = useState([]);\n\n\n  // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n\n  // console.log(`OUT${scaleData}`)\n\n  let tip = d3-tip()\n        .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html((d) => {\n          return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\"\n        });\n\n  useEffect(() => {\n\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n\n      const res1 = await fetch('./cases.geojson')\n      const eventsDataCombine = await res1.json();\n      const eventsData = eventsDataCombine.features;\n      setEventsData(eventsData);\n\n      const projection = geoAlbersUsa()\n        .scale(scaleData)\n        .translate([960 / 2, 600 / 2])\n\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n\n      const chart = chartEl.append(\"g\")\n\n      const path = d3.geoPath()\n        .projection(projection);\n\n      tip = d3-tip()\n        .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html((d) => {\n          return \"<strong>Country: </strong><span class='details'>\" + d.properties.name + \"<br></span>\"\n        });\n\n      // console.log(scaleData);\n      const myColor = d3.scaleLinear().domain([1, 10]).range([\"white\", \"#9865ff\"])\n\n\n\n      chart.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function (d) {\n          return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        // .style(\n        //     \"opacity\", \n        //     function(d){\n        //       for (let i = 0; i < props.data1.length ; i++){\n        //         if (props.data1[i].name == d.properties.NAME) {\n        //           // console.log(data1.data1[i].num)\n        //           return props.data1[i].num + 0.05\n        //         }\n        //       } \n        //     })\n        .style(\n          \"fill\",\n          function (d) {\n            for (let i = 0; i < props.data2.length; i++) {\n              if (props.data2[i].name == d.properties.NAME) {\n                // console.log(myColor(props.data2[i]))\n                console.log(`Here${myColor(props.data2[i].num * 10)}`)\n                console.log(`Here${i}`)\n                console.log(`Here${props.data2[i].num}`)\n                return myColor(props.data2[i].num * 10)\n              }\n            }\n          })\n\n      chart\n        .selectAll(\".points\")\n        .data(eventsData).enter()\n        .append(\"circle\")\n        .attr(\"class\", \"event\")\n        .attr(\"r\",\n          function (d) {\n            // console.log(d)\n            return 4.0\n            // }\n          })\n        .attr(\"transform\",\n\n          function (d) {\n            // console.log(d)\n            return \"translate(\" + projection(d.geometry.coordinates) + \")\"\n          })\n    })();\n\n  }, [statesData.length]\n  )\n\n\n  return (\n\n    <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}