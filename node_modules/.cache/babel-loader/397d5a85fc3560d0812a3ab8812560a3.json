{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\"; // import { geoEqualEarth, geoPath } from \"d3-geo\"\n\nimport d3Tip from \"d3-tip\";\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\";\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\"; // const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props) {\n  _s();\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend); // const [casesData, setCasesData] = useState([]);\n  // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n  // console.log(`OUT${scaleData}`)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json');\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features;\n      setStatesData(statesData);\n      setScaleData(props.scaleSend); // const res1 = await fetch('./cases.geojson')\n      // const casesDataCombine = await res1.json();\n      // const casesData = casesDataCombine.features;\n      // setCasesData(casesData);\n\n      const projection = geoAlbersUsa().scale(scaleData).translate([960 / 2, 600 / 2]);\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n      const chart = chartEl.append(\"g\");\n      const path = d3.geoPath().projection(projection); // const caseTip = d3.select(\".case\").append(\"div\") \n      //   .attr(\"class\", \"caseTip\")               \n      //   .style(\"opacity\", 0);\n\n      console.log(scaleData);\n      const myColor = d3.scaleLinear().domain([0, 100]).range([\"white\", \"#666666\"]);\n      var caseTip = d3Tip() // .attr('class', 'd3-tip')\n      .offset([-10, 0]).html(function (d, casesData) {\n        return \"<div class='caseTip'>\" + \"<span>State:</span> <span>\" + casesData.properties.state + \"</span><br>\" + \"<span>City:</span> <span>\" + casesData.properties.city + \"</span><br>\" + \"<span>Killed:</span> <span>\" + casesData.properties.killed + \"</span><br>\" + \"<span>Injured:</span> <span>\" + casesData.properties.injured + \"</span><br>\" + \"<span>Killed:</span> <span>\" + casesData.properties.year + \"-\" + casesData.properties.month + \"-\" + casesData.properties.day + \"</span><br>\" + \"<span>Gun:</span> <span>\" + casesData.properties.guntype + \"</span>\" + \"</div>\";\n      });\n      chart.call(caseTip);\n      chart.selectAll(\"path\").data(statesData).enter().append(\"path\").attr(\"class\", \"state\").attr(\"id\", function (d) {\n        return d.properties.NAME;\n      }).attr(\"d\", path) // .style(\"fill\", \"steelblue\");\n      // .style(\n      //     \"opacity\", \n      //     function(d, i){\n      //       // for (let i = 0; i < props.data1.length ; i++){\n      //         // if (props.data1[i].name == d.properties.NAME) {\n      //           // console.log(data1.data1[i].num)\n      //           return props.data1[i].total + 0.05\n      //         // }\n      //       // } \n      //     })\n      .style(\"fill\", function (d, i) {\n        // for (let i = 0; i < props.data2.length; i++) {\n        // if (props.data2[i] == d.properties.NAME) {\n        // console.log(myColor(props.data2[i]))\n        console.log(`Here${myColor(props.data2[i].total)}`);\n        console.log(`Here${i}`);\n        console.log(`Here${props.data2[i].total}`);\n        return myColor(props.data2[i].total); // }\n        // }\n      }).on(\"click\", function (d) {\n        setScaleData(1500);\n      });\n      chart.selectAll(\".points\").data(props.data3).enter().append(\"circle\").attr(\"class\", \"case\").attr(\"r\", function (d) {\n        // console.log(d)\n        return 4.0; // }\n      }).attr(\"transform\", function (d) {\n        // console.log(d)\n        return \"translate(\" + projection(d.geometry.coordinates) + \")\";\n      }).on('mouseover', caseTip.show).on('mouseout', caseTip.hide);\n    })();\n  }, [statesData.length]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 960 600\",\n    className: \"usMap Map\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"ZZV9KQG062xSXod2lSJKuRcjMCw=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project-on-github/Gun_Violence_US_Visualization/src/Map.js"],"names":["React","useState","useEffect","useLayoutEffect","d3Tip","geoAlbers","geoPath","geoAlbersUsa","useD3","d3","feature","Map","props","ref","useRef","statesData","setStatesData","scaleData","setScaleData","scaleSend","res","fetch","statesDataCombine","json","features","projection","scale","translate","chartEl","select","current","selectAll","remove","chart","append","path","console","log","myColor","scaleLinear","domain","range","caseTip","offset","html","d","casesData","properties","state","city","killed","injured","year","month","day","guntype","call","data","enter","attr","NAME","style","i","data2","total","on","data3","geometry","coordinates","show","hide","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\"\n// import { geoEqualEarth, geoPath } from \"d3-geo\"\nimport d3Tip from \"d3-tip\"\nimport { geoAlbers, geoPath, geoAlbersUsa } from \"d3-geo\"\nimport { useD3 } from './hooks/useD3';\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\n// const projection = geoEqualEarth()\n//   .scale(160)\n//   .translate([ 800 / 2, 450 / 2 ])\n\nfunction Map(props) {\n\n  const ref = React.useRef(null);\n  const [statesData, setStatesData] = useState([]);\n  const [scaleData, setScaleData] = useState(props.scaleSend);\n  // const [casesData, setCasesData] = useState([]);\n\n  // let projection = geoAlbersUsa()\n  // .scale(scaleData)\n  // .translate([ 960 / 2, 600 / 2 ])\n\n  // console.log(`OUT${scaleData}`)\n  \n  useEffect(() => {\n\n    (async () => {\n      const res = await fetch('./gz_2010_us_040_00_500k.json')\n      const statesDataCombine = await res.json();\n      const statesData = statesDataCombine.features\n      setStatesData(statesData);\n      setScaleData(props.scaleSend);\n\n      // const res1 = await fetch('./cases.geojson')\n      // const casesDataCombine = await res1.json();\n      // const casesData = casesDataCombine.features;\n      // setCasesData(casesData);\n\n      const projection = geoAlbersUsa()\n        .scale(scaleData)\n        .translate([960 / 2, 600 / 2])\n\n      const chartEl = d3.select(ref.current);\n      chartEl.selectAll(\"*\").remove();\n\n      const chart = chartEl.append(\"g\")\n\n      const path = d3.geoPath()\n        .projection(projection);\n\n      // const caseTip = d3.select(\".case\").append(\"div\") \n      //   .attr(\"class\", \"caseTip\")               \n      //   .style(\"opacity\", 0);\n\n      console.log(scaleData);\n      const myColor = d3.scaleLinear().domain([0, 100]).range([\"white\",\"#666666\"])\n\n      var caseTip = d3Tip()\n        // .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html(function(d,casesData) {\n          return (\n          \"<div class='caseTip'>\" +\n          \"<span>State:</span> <span>\" + casesData.properties.state + \"</span><br>\"\n          +\"<span>City:</span> <span>\" + casesData.properties.city + \"</span><br>\"\n          +\"<span>Killed:</span> <span>\" + casesData.properties.killed + \"</span><br>\"\n          +\"<span>Injured:</span> <span>\" + casesData.properties.injured + \"</span><br>\"\n          +\"<span>Killed:</span> <span>\" + casesData.properties.year +\"-\" + casesData.properties.month+\"-\"+casesData.properties.day + \"</span><br>\"\n          +\"<span>Gun:</span> <span>\" + casesData.properties.guntype + \"</span>\"\n          +\"</div>\"\n          )\n        })\n\n      chart.call(caseTip);\n\n      chart.selectAll(\"path\")\n        .data(statesData)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"state\")\n        .attr(\"id\", function (d) {\n          return d.properties.NAME\n        })\n        .attr(\"d\", path)\n        // .style(\"fill\", \"steelblue\");\n        // .style(\n        //     \"opacity\", \n        //     function(d, i){\n        //       // for (let i = 0; i < props.data1.length ; i++){\n        //         // if (props.data1[i].name == d.properties.NAME) {\n        //           // console.log(data1.data1[i].num)\n        //           return props.data1[i].total + 0.05\n        //         // }\n        //       // } \n        //     })\n        .style(\n          \"fill\",\n          function (d, i) {\n            // for (let i = 0; i < props.data2.length; i++) {\n              // if (props.data2[i] == d.properties.NAME) {\n                // console.log(myColor(props.data2[i]))\n                console.log(`Here${myColor(props.data2[i].total)}`)\n                console.log(`Here${i}`)\n                console.log(`Here${props.data2[i].total}`)\n                return myColor(props.data2[i].total)\n              // }\n            // }\n          })\n        .on(\n          \"click\",function (d) {\n            setScaleData(1500)\n          }\n        )\n          \n\n      chart\n        .selectAll(\".points\")\n        .data(props.data3).enter()\n        .append(\"circle\")\n        .attr(\"class\", \"case\")\n        .attr(\"r\",\n          function (d) {\n            // console.log(d)\n            return 4.0\n            // }\n          })\n        .attr(\"transform\",\n\n          function (d) {\n            // console.log(d)\n            return \"translate(\" + projection(d.geometry.coordinates) + \")\"\n          })\n        .on('mouseover', caseTip.show)\n        .on('mouseout', caseTip.hide)\n\n\n    })();\n\n  }, [statesData.length]\n  )\n\n\n  return (\n\n    <svg viewBox=\"0 0 960 600\" className=\"usMap Map\" ref={ref}></svg>\n  )\n}\n\n\n\nexport default Map"]},"metadata":{},"sourceType":"module"}