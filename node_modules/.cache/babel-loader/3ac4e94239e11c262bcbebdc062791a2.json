{"ast":null,"code":"var _jsxFileName = \"/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/MapCharts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport * as d3 from \"d3\";\nimport { feature } from \"topojson-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth().scale(160).translate([800 / 2, 450 / 2]);\n\nfunction DataProcess() {\n  _s();\n\n  const [statesData, setStatesData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./colorTest.json');\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n  const svg = d3.select(\".usMap\");\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: svg.selectAll(\"path\").domain(statesData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataProcess, \"reEC43PI7doWY+URVWfGlTOQ7jk=\");\n\n_c = DataProcess;\nexport default DataProcess;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProcess\");","map":{"version":3,"sources":["/Users/lion/Sites/Visualization/project/gun-violence-us-visualization/src/MapCharts.js"],"names":["React","useState","useEffect","geoEqualEarth","geoPath","d3","feature","projection","scale","translate","DataProcess","statesData","setStatesData","res","fetch","json","svg","select","selectAll","domain"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,QAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAU,GAAGJ,aAAa,GAC7BK,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAE,MAAM,CAAR,EAAW,MAAM,CAAjB,CAFM,CAAnB;;AAKA,SAASC,WAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAAvB;AACA,YAAMH,UAAU,GAAG,MAAME,GAAG,CAACE,IAAJ,EAAzB;AACAH,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMK,GAAG,GAAGX,EAAE,CAACY,MAAH,CAAU,QAAV,CAAZ;AAEA,sBACE;AACI,IAAA,OAAO,EAAED,GAAG,CAACE,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,CAA6BR,UAA7B;AADb;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApBQD,W;;KAAAA,W;AAsBT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { geoEqualEarth, geoPath } from \"d3-geo\"\nimport * as d3 from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([ 800 / 2, 450 / 2 ])\n\n\nfunction DataProcess(){\n  const [statesData, setStatesData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./colorTest.json')\n      const statesData = await res.json();\n      setStatesData(statesData);\n    })();\n  }, []);\n\n  const svg = d3.select(\".usMap\");\n\n  return (\n    <button \n        onClick={svg.selectAll(\"path\").domain(statesData)}\n    >\n    </button>\n  )\n\n}\n\nexport default DataProcess"]},"metadata":{},"sourceType":"module"}